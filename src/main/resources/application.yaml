topic:
  name: ${KAFKA_FUNC_TOPIC:topic}
  partitions-num: 1
  replication-factor: 1

server:
  port: 9080

spring:
  # banner
  banner:
    location: classpath:banner/banner.txt
  kafka:
    bootstrap-servers:
      - ${KAFKA_URI_PLAINTEXT:http://localhost:9192}
    properties:
      schema.registry.url: ${KAFKA_SCHEMA_REGISTRY_URL:http://localhost:8083}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        interceptor.classes: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
    template:
      default-topic:

logging:
  level:
    root: info

default:
  datasource:
    url: ${DATASOURCE_URL:jdbc:h2:mem:rock}
    user: system
    password: system
  check:
    delay: 1
    retry: 30

modules:
  sql.connect :
    function: io.rocktest.modules.Sql.connect
  sql.request :
    function: io.rocktest.modules.Sql.request
  http.get :
    function: io.rocktest.modules.Http.get
  http.delete :
    function: io.rocktest.modules.Http.delete
  http.post :
    function: io.rocktest.modules.Http.post
  http.put :
    function: io.rocktest.modules.Http.put
  http.mock :
    function: io.rocktest.modules.Http.mock
  json.parse :
    function: io.rocktest.modules.JSon.parse
    result: result
    extension: path
    params:
      1: json
  date.now:
    function: io.rocktest.modules.Date.now
    result: result
  date.minus :
    function: io.rocktest.modules.Date.minus
    result: result
    params:
      1: date
      2: years
      3: months
      4: days
